/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package csia;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JOptionPane;

/**
 *
 * @author CorbynKwan
 */
public class DeleteWorkerDialog extends javax.swing.JDialog implements ActionListener {

    private Manager manager;
    private ListOfWorkers list;

    /**
     * Creates new form DeleteEmployeeDialog
     */
    public DeleteWorkerDialog(java.awt.Frame parent, boolean modal, Manager m, ListOfWorkers l) {
        super(parent, modal);
        initComponents();
        this.manager = m;
        this.list = l;
        verifyDeleteWorkerButton.addActionListener(this);
        backButton1.addActionListener(this);
    }

    /**
     * if verifyDeleteWorkerDialog is clicked, requirements are processed
     * through if statements, and if not met error message shown if backButton
     * is clicked, window is closed.
     *
     * @param e The button clicked
     */
    public void actionPerformed(ActionEvent e) {

        if (e.getSource() == verifyDeleteWorkerButton) {

            try {
                int id = Integer.valueOf(workerIdTextField.getText());
            } catch (NumberFormatException error) {
                JOptionPane.showMessageDialog(this, "Enter a number for the ID");
                workerIdTextField.setText("");

            }
            if (managerPasswordTextField.getText().equals(manager.getMasterpassword()) && deleteWorkerCheckBox.isSelected()) {
                list.deleteWorker(Integer.valueOf(workerIdTextField.getText()));
                JOptionPane.showMessageDialog(this, "Successfully deleted worker");

            } else if (!managerPasswordTextField.getText().equals(manager.getMasterpassword()) && !deleteWorkerCheckBox.isSelected()) {
                JOptionPane.showMessageDialog(this, "Wrong password, Checkbox was not checked");

            } else if (!managerPasswordTextField.getText().equals(manager.getMasterpassword()) && deleteWorkerCheckBox.isSelected()) {
                JOptionPane.showMessageDialog(this, "Wrong password");

            } else if (managerPasswordTextField.getText().equals(manager.getMasterpassword()) && !deleteWorkerCheckBox.isSelected()) {
                JOptionPane.showMessageDialog(this, "Checkbox was not checked");

            }
        }

        if (e.getSource() == backButton1) {
            this.setVisible(false);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        verifyCreateEmployeeButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        workerIdTextField = new javax.swing.JTextField();
        deleteWorkerCheckBox = new javax.swing.JCheckBox();
        verifyDeleteWorkerButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        backButton1 = new javax.swing.JButton();
        managerPasswordTextField = new javax.swing.JPasswordField();

        verifyCreateEmployeeButton.setText("Create");

        backButton.setText("Back");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Delete Worker");

        jLabel1.setText("Delete Worker");

        jLabel2.setText("Worker ID:");

        deleteWorkerCheckBox.setText("I agree to delete this worker");
        deleteWorkerCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteWorkerCheckBoxActionPerformed(evt);
            }
        });

        verifyDeleteWorkerButton.setText("Delete");

        jLabel3.setText("Manager Password:");

        backButton1.setText("Back");

        managerPasswordTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                managerPasswordTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(deleteWorkerCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(verifyDeleteWorkerButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(backButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(workerIdTextField)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(managerPasswordTextField))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(workerIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(managerPasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backButton1)
                    .addComponent(verifyDeleteWorkerButton)
                    .addComponent(deleteWorkerCheckBox))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void deleteWorkerCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteWorkerCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteWorkerCheckBoxActionPerformed

    private void managerPasswordTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_managerPasswordTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_managerPasswordTextFieldActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JButton backButton1;
    private javax.swing.JCheckBox deleteWorkerCheckBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPasswordField managerPasswordTextField;
    private javax.swing.JButton verifyCreateEmployeeButton;
    private javax.swing.JButton verifyDeleteWorkerButton;
    private javax.swing.JTextField workerIdTextField;
    // End of variables declaration//GEN-END:variables
}
