/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package csia;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.time.LocalDateTime;
import javax.swing.JOptionPane;

/**
 *
 * @author CorbynKwan
 */
public class StartShiftDialog extends javax.swing.JDialog implements ActionListener {

    private Shift shift;
    private Worker worker;

    /**
     * Creates new form StartShiftDialog
     */
    public StartShiftDialog(java.awt.Frame parent, boolean modal, Shift s, Worker w) {
        super(parent, modal);
        initComponents();

        startShiftButton.addActionListener(this);
        stopShiftButton.addActionListener(this);
        backButton.addActionListener(this);

        shift = s;
        worker = w;
        stopShiftButton.setEnabled(false);
    }

    /**
     * if the startShiftButtom is clicked, sets the start time to the time at
     * the current moment if the stopShiftButtom is clicked, sets the stop time
     * to the time at the current moment if the backButton is clicked, the
     * window is closed
     *
     * @param e The button clicked
     */
    public void actionPerformed(ActionEvent e) {

        if (e.getSource() == startShiftButton) {
            worker.addShift(shift);

            shift.settimeStart(LocalDateTime.now());
            startShiftTimeTextField.setText(String.valueOf(shift.gettimeStart()));
            startShiftButton.setEnabled(false);
            stopShiftButton.setEnabled(true);

        }

        if (e.getSource() == stopShiftButton) {

            shift.settimeStop(LocalDateTime.now());
            stopShiftTimeTextField.setText(String.valueOf(shift.gettimeStop()));
            stopShiftButton.setEnabled(false);

        }
        if (e.getSource() == backButton) {
            if (!startShiftTimeTextField.getText().isEmpty() && stopShiftTimeTextField.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please click 'Stop Shift'");
            } else if (!startShiftTimeTextField.getText().isEmpty() && !stopShiftTimeTextField.getText().isEmpty()) {
                this.setVisible(false);
            } else if (startShiftTimeTextField.getText().isEmpty() && stopShiftTimeTextField.getText().isEmpty()) {
                this.setVisible(false);
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        startShiftTimeTextField = new javax.swing.JTextField();
        stopShiftTimeTextField = new javax.swing.JTextField();
        startShiftButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        stopShiftButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Start Shift");

        jLabel1.setText("Start Shift");

        jLabel2.setText("Shift start time:");

        jLabel3.setText("Shift stop time:");

        startShiftTimeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startShiftTimeTextFieldActionPerformed(evt);
            }
        });

        stopShiftTimeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopShiftTimeTextFieldActionPerformed(evt);
            }
        });

        startShiftButton.setText("Start Shift");

        backButton.setText("Back");

        stopShiftButton.setText("Stop Shift");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(163, 163, 163)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(startShiftTimeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(stopShiftTimeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(72, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(startShiftButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(stopShiftButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(backButton)
                .addGap(21, 21, 21))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(startShiftTimeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(stopShiftTimeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startShiftButton)
                    .addComponent(backButton)
                    .addComponent(stopShiftButton))
                .addContainerGap(126, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startShiftTimeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startShiftTimeTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_startShiftTimeTextFieldActionPerformed

    private void stopShiftTimeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopShiftTimeTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stopShiftTimeTextFieldActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton startShiftButton;
    private javax.swing.JTextField startShiftTimeTextField;
    private javax.swing.JButton stopShiftButton;
    private javax.swing.JTextField stopShiftTimeTextField;
    // End of variables declaration//GEN-END:variables
}
