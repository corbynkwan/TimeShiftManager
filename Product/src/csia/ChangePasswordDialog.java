    /*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package csia;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JOptionPane;

/**
 *
 * @author CorbynKwan
 */
public class ChangePasswordDialog extends javax.swing.JDialog implements ActionListener {

    private Manager manager;
    private ListOfWorkers list;

    /**
     * Creates new form CreatePassword
     */
    public ChangePasswordDialog(java.awt.Frame parent, boolean modal, Manager m, ListOfWorkers list) {
        super(parent, modal);
        initComponents();
        this.manager = m;
        backButton.addActionListener(this);
        verifyChangePasswordButton.addActionListener(this);
    }

    /**
     * if verifyChangePassButton is clicked, requirements are processed through
     * if statements, and if not met error message shown if backButton is
     * clicked, window is closed.
     *
     * @param e The button clicked
     */
    public void actionPerformed(ActionEvent e) {

        if (e.getSource() == verifyChangePasswordButton) {
            if(newPassword.getText().length()<1){
                JOptionPane.showMessageDialog(this, "New password needs to have length bigger or equal than 1");
            }
                
            if ((currentPassword.getText().equals(manager.getMasterpassword()) && changePasswordCheckBox.isSelected() && newPassword.getText().equals(retypeNewPassword.getText())) && 
                    newPassword.getText().length()>=1) {
                manager.setMasterPassword(newPassword.getText());
                JOptionPane.showMessageDialog(this, "Successfully changed password");

            } else if (!currentPassword.getText().equals(manager.getMasterpassword()) && !changePasswordCheckBox.isSelected() && !newPassword.getText().equals(retypeNewPassword.getText())) {
                JOptionPane.showMessageDialog(this, "Wrong current password, Checkbox was not checked, New password was not the same as Retyped new password");

            } else if ((!currentPassword.getText().equals(manager.getMasterpassword()) && changePasswordCheckBox.isSelected() && !newPassword.getText().equals(retypeNewPassword.getText()))) {
                JOptionPane.showMessageDialog(this, "Wrong current password, New password was not the same as Retyped new password");

            } else if ((!currentPassword.getText().equals(manager.getMasterpassword()) && !changePasswordCheckBox.isSelected() && newPassword.getText().equals(retypeNewPassword.getText()))) {
                JOptionPane.showMessageDialog(this, "Wrong current password, Checkbox was not checked");

            } else if ((currentPassword.getText().equals(manager.getMasterpassword()) && !changePasswordCheckBox.isSelected() && !newPassword.getText().equals(retypeNewPassword.getText()))) {
                JOptionPane.showMessageDialog(this, "New password was not the same as Retyped new password, Checkbox was not checked");

            } else if ((!currentPassword.getText().equals(manager.getMasterpassword()) && changePasswordCheckBox.isSelected() && newPassword.getText().equals(retypeNewPassword.getText()))) {
                JOptionPane.showMessageDialog(this, "Wrong current password");

            } else if ((currentPassword.getText().equals(manager.getMasterpassword()) && changePasswordCheckBox.isSelected() && !newPassword.getText().equals(retypeNewPassword.getText()))) {
                JOptionPane.showMessageDialog(this, "New password was not the same as Retyped new password");

            } else if ((currentPassword.getText().equals(manager.getMasterpassword()) && !changePasswordCheckBox.isSelected() && newPassword.getText().equals(retypeNewPassword.getText()))) {
                JOptionPane.showMessageDialog(this, "Checkbox was not checked");

            }
        }
        if (e.getSource() == backButton) {
            this.setVisible(false);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPasswordField1 = new javax.swing.JPasswordField();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        adsij = new javax.swing.JLabel();
        changePasswordCheckBox = new javax.swing.JCheckBox();
        verifyChangePasswordButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        retypeNewPassword = new javax.swing.JPasswordField();
        newPassword = new javax.swing.JPasswordField();
        currentPassword = new javax.swing.JPasswordField();

        jPasswordField1.setText("jPasswordField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Change Password");

        jLabel3.setText("New password:");

        jLabel1.setText("Change Password");

        adsij.setText("Current password:");

        changePasswordCheckBox.setText("I agree to change my current password");
        changePasswordCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changePasswordCheckBoxActionPerformed(evt);
            }
        });

        verifyChangePasswordButton.setText("Change");

        backButton.setText("Back");

        jLabel4.setText("Retype new password:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(changePasswordCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(verifyChangePasswordButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(backButton))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(adsij)
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(newPassword)
                            .addComponent(currentPassword)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(148, 148, 148)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(retypeNewPassword)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(adsij)
                    .addComponent(currentPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(newPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(retypeNewPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backButton)
                    .addComponent(verifyChangePasswordButton)
                    .addComponent(changePasswordCheckBox))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void changePasswordCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changePasswordCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_changePasswordCheckBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel adsij;
    private javax.swing.JButton backButton;
    private javax.swing.JCheckBox changePasswordCheckBox;
    private javax.swing.JPasswordField currentPassword;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JPasswordField newPassword;
    private javax.swing.JPasswordField retypeNewPassword;
    private javax.swing.JButton verifyChangePasswordButton;
    // End of variables declaration//GEN-END:variables
}
